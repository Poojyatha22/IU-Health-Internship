---
title: "IU Health Documentation part 2"
author: "Harlan, Poojyatha"
format: revealjs
editor: visual
---

## MICROSOFT SQL SERVER

Now that we have seen how a complex xml document can be converted into a csv files, the next step we do is that we try to upload these files to the Microsoft Azure Data Studio.

```{r echo=FALSE, out.width="50%"}

knitr::include_graphics("screenshots/sqlserver.png", error=FALSE)
```

## Access data related to patients from the EDW Cerner Data Source Mart through SQL :

```{r echo=FALSE, out.width="50%"}

knitr::include_graphics("screenshots/Cerner.png", error=FALSE)
```

## Finding Commonalities between patient data and drug data

The next step was to find out commonalities between this data (data that was already existing in the IU Health server) and the data on MSS (microsoft sql server , in other words, that data that we uploaded).

Upon some exploration, I found that CatalogCVDisplayDSC column from the above screenshot and a column called from_name from one of the uplaoded tables called association were the same. So, we tried to create a crosswalk between the both. Below is the process of creating a crosswalk.

## Merging data :

First we need to establish the connection with the Cerner:

```{r echo=FALSE, out.width="50%"}

knitr::include_graphics("screenshots/connnection-1.png", error=FALSE)
```

## After establishing connection, we access data from the Cerner :

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/2.png", error=FALSE)

```

## We now pick the columns that we are particularly interested in which is 'CatalogCVCD and 'CatalogCVDisplayDSC' which are the drug code and drugs names.

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/3.png", error=FALSE)
```

## Now, we access from_name from association table :

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/4.png", error=FALSE)

```

## Similarly, we access from_name from dts as well :

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/5.png", error=FALSE)
```

## Crosswalk

For comparing two sets of strings, we convert them to a standard format - i.e. remove any extra characters that do not add value, convert all the string to either lower or upper strings, etc. Before we merge the data, we need to find out what are the strings that are exactly similar. For this, we calculate string_dist which tells us how similar two strings are. But this score alone may not be enough because two string can be in totally different lengths. Therefore, we need to find a way to normalise this. So we divide the string distance by the length of the string to calculate the simscore to check if two string are similar.

## Simscore

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/simscore.png", error=FALSE)
```

## After, this we go ahead and finally create the final crosswalk through row binding. We form a cross between xml, dts and the cerner data (table 1).

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/7.png", error=FALSE)
```

## After creating this crosswalk, we upload this to the Microsoft SQL Server a well.

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/8.png", error=FALSE)
```

## Forming Cohorts in drugs data and patient data :

Here we are trying to group drugs based on the criteria 'Alcohol Drinking'

```{r echo=FALSE, out.width="50%"}
knitr::include_graphics("screenshots/Grouping.png", error=FALSE)

```
